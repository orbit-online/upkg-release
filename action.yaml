name: Bundle a μpkg package and create a GitHub release with it
description: Uses upkg-bundle to create a μpkg tarball package
inputs:
  upkg-version:
    description: The version of μpkg to use for bundling
    default: latest
    required: false
  version:
    description: The version to write to upkg.json, corresponds to `-V` in `upkg bundle`
    default: ""
    required: false
  paths:
    description: Argument (space separated) list of relative paths to files and directories to include in the package.
    default: ""
    required: false
  working-directory:
    description: The working directory to change to before determining the version and bundling. This disables automatic checkout.
    default: ""
    required: false
outputs:
  download-url:
    description: The download URL of the bundled package
    value: https://github.com/${{ github.repository }}/releases/download/${{ steps.release.outputs.tag }}/${{ steps.basename.outputs.basename }}
runs:
  using: composite
  steps:
  - uses: actions/checkout@v4
    with:
      ref: ${{ github.ref }}
    if: ${{ inputs.working-directory == '' }}
  - uses: orbit-online/upkg-bundle@v1
    id: bundle
    with:
      upkg-version: ${{ inputs.upkg-version }}
      version: ${{ inputs.version }}
      paths: ${{ inputs.paths }}
      working-directory: ${{ inputs.working-directory || '.' }}
  - uses: orbit-online/git-release@v1
    id: release
    with:
      working-directory: ${{ inputs.working-directory || '.' }}
  - uses: ncipollo/release-action@v1
    with:
      name: ${{ steps.release.outputs.tag }}
      body: |
        Install/depend on this package using [μpkg](https://github.com/orbit-online/upkg):
        ```
        upkg add https://github.com/${{ github.repository }}/releases/download/${{ steps.release.outputs.tag }}/${{ steps.bundle.outputs.basename }} ${{ steps.bundle.outputs.sha256 }}
        ```

        ${{ steps.release.outputs.message }}
      draft: false
      prerelease: false
      artifacts: ${{ steps.bundle.outputs.dest }}
      artifactErrorsFailBuild: true
      artifactContentType: application/gzip
